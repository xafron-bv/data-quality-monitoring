name: Deploy Docusaurus to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'
  
  # Runs on pull requests to validate the build
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write  # Needed for PR comments

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: docs/package-lock.json

      # Cache Docusaurus build artifacts
      - name: Cache Docusaurus build
        uses: actions/cache@v4
        with:
          path: |
            docs/.docusaurus
            docs/node_modules/.cache
          key: ${{ runner.os }}-docusaurus-build-${{ hashFiles('docs/**/*.md', 'docs/**/*.mdx', 'docs/docusaurus.config.js', 'docs/sidebars.js') }}
          restore-keys: |
            ${{ runner.os }}-docusaurus-build-

      # Cache wkhtmltopdf installation
      - name: Cache wkhtmltopdf
        uses: actions/cache@v4
        id: wkhtmltopdf-cache
        with:
          path: |
            /usr/bin/wkhtmltopdf
            /usr/bin/wkhtmltoimage
            /usr/lib/x86_64-linux-gnu/libwkhtmltox*
            /usr/share/doc/wkhtmltopdf
            /usr/share/man/man1/wkhtmlto*
          key: ${{ runner.os }}-wkhtmltopdf-${{ hashFiles('.github/workflows/deploy-docs.yml') }}
          restore-keys: |
            ${{ runner.os }}-wkhtmltopdf-

      - name: Install dependencies
        run: npm ci
        working-directory: ./docs

      # Install wkhtmltopdf for PDF generation
      - name: Install wkhtmltopdf
        if: steps.wkhtmltopdf-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y wkhtmltopdf
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Generate sidebars
        run: node scripts/generate-sidebars.js
        working-directory: ./docs

      - name: Build website
        run: npm run build
        working-directory: ./docs

      - name: Setup Pages
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './docs/build'
      
      # For PRs, upload build artifacts for inspection (optional)
      - name: Upload PR build artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: docs-build-pr-${{ github.event.pull_request.number }}
          path: './docs/build'
          retention-days: 7

      # Comment on PR with build status (optional)
      - name: Comment PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const outcome = '${{ job.status }}';
            const message = outcome === 'success' 
              ? '✅ Documentation build succeeded! The build artifacts have been uploaded for inspection.'
              : '❌ Documentation build failed! Please check the workflow logs for details.';
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });

  # Deployment job - only runs on main branch
  deploy:
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4