{
  "error_rules": [
    {
      "rule_name": "inject_unicode_error",
      "description": "Injects a common unicode encoding error in care instructions.",
      "operation": "string_replace",
      "params": { "find": "Â°C", "replace": "Â°Ãƒ" }
    },
    {
      "rule_name": "inject_missing_temperature_value",
      "description": "Removes the temperature value in washing instructions.",
      "operation": "regex_replace",
      "params": { "pattern": "(MAX\\s+)\\d+", "replace": "$1" }
    },
    {
      "rule_name": "inject_wrong_temperature_sign",
      "description": "Removes the degree symbol in temperature specifications.",
      "operation": "string_replace",
      "params": { "find": "Â°C", "replace": "C" }
    },
    {
      "rule_name": "inject_disallowed_symbol_registered",
      "description": "Adds a registered trademark symbol to care instructions.",
      "operation": "string_replace",
      "params": { "find": "BLEKEN", "replace": "BLEKENÂ®" },
      "conditions": [{ "type": "contains", "value": "BLEKEN" }]
    },
    {
      "rule_name": "inject_incorrect_capitalization",
      "description": "Converts care instructions to incorrect mixed case.",
      "operation": "string_replace",
      "params": { "find": "NIET", "replace": "Niet" }
    },
    {
      "rule_name": "inject_temperature_range_error",
      "description": "Changes a specific temperature to a range, which is incorrect format.",
      "operation": "string_replace",
      "params": { "find": "40Â°C", "replace": "30-40Â°C" }
    },
    {
      "rule_name": "inject_disallowed_symbol_trademark",
      "description": "Adds a trademark symbol to care instructions.",
      "operation": "string_replace",
      "params": { "find": "WASSEN", "replace": "WASSENâ„¢" },
      "conditions": [{ "type": "contains", "value": "WASSEN" }]
    },
    {
      "rule_name": "inject_html_tag_error",
      "description": "Inserts HTML tags into care instructions.",
      "operation": "string_replace",
      "params": { "find": "STRIJKEN", "replace": "<b>STRIJKEN</b>" },
      "conditions": [{ "type": "contains", "value": "STRIJKEN" }]
    },
    {
      "rule_name": "inject_numerical_word_error",
      "description": "Replaces numerical temperature with word equivalent.",
      "operation": "string_replace",
      "params": { "find": "40Â°C", "replace": "veertigÂ°C" }
    },
    {
      "rule_name": "inject_delimiter_error",
      "description": "Replaces a standard period delimiter with a semicolon in care instructions.",
      "operation": "string_replace",
      "params": { "find": ".", "replace": ";" }
    },
    {
      "rule_name": "inject_leading_trailing_space_error",
      "description": "Adds unnecessary leading and trailing whitespace to care instructions.",
      "operation": "add_whitespace"
    },
    {
      "rule_name": "inject_appended_care_instruction_error",
      "description": "Appends an English care instruction to a non-English instruction set.",
      "operation": "append",
      "params": { "text": " - Machine wash cold" }
    },
    {
      "rule_name": "inject_prepended_color_error",
      "description": "Prepends a color attribute to the care instructions.",
      "operation": "prepend",
      "params": { "text": "Blue " }
    },
    {
      "rule_name": "inject_missing_temperature_value_error",
      "description": "Removes the numerical temperature in care instructions.",
      "operation": "regex_replace",
      "params": { "pattern": "(MAX\\s*)\\d+(Â°C)", "replace": "$1$2" },
      "conditions": [{ "type": "contains", "value": "MAX" }]
    },
    {
      "rule_name": "inject_decimal_temperature_error",
      "description": "Changes an integer temperature to a decimal.",
      "operation": "string_replace",
      "params": { "find": "40Â°C", "replace": "40.5Â°C" }
    },
    {
      "rule_name": "inject_malformed_instruction_error",
      "description": "Changes the format of an instruction to lowercase and removes standard punctuation.",
      "operation": "string_replace",
      "params": { "find": "NIET BLEKEN", "replace": "niet bleken" },
      "conditions": [{ "type": "contains", "value": "NIET BLEKEN" }]
    },
    {
      "rule_name": "inject_hyphen_delimiter_error",
      "description": "Incorrectly uses a hyphen as a delimiter between care instructions.",
      "operation": "string_replace",
      "params": { "find": ". ", "replace": " - " }
    },
    {
      "rule_name": "inject_multiple_spaces_error",
      "description": "Adds multiple spaces between words in care instructions.",
      "operation": "string_replace",
      "params": { "find": " ", "replace": "   " }
    },
    {
      "rule_name": "inject_line_break_error",
      "description": "Adds a line break in the middle of care instructions.",
      "operation": "regex_replace",
      "params": { "pattern": "\\s", "replace": "\n", "count": 1 }
    },
    {
      "rule_name": "inject_random_noise_error",
      "description": "Injects random characters or duplicates parts of care instructions.",
      "operation": "random_noise"
    },
    {
      "rule_name": "inject_missing_drying_instruction",
      "description": "Removes the drying instruction.",
      "operation": "string_replace",
      "params": { "find": "NIET IN DE DROGER", "replace": "" },
      "conditions": [{ "type": "contains", "value": "NIET IN DE DROGER" }]
    },
    {
      "rule_name": "inject_abbreviated_instruction",
      "description": "Abbreviates a care instruction inappropriately.",
      "operation": "string_replace",
      "params": { "find": "NIET STRIJKEN", "replace": "N.STRIJK" },
      "conditions": [{ "type": "contains", "value": "NIET STRIJKEN" }]
    },
    {
      "rule_name": "inject_emoji_error",
      "description": "Adds emojis to care instructions which are not valid.",
      "operation": "string_replace",
      "params": { "find": "WASSEN", "replace": "WASSEN ðŸ§¼" },
      "conditions": [{ "type": "contains", "value": "WASSEN" }]
    },
    {
      "rule_name": "inject_special_character_error",
      "description": "Introduces special characters in care instructions.",
      "operation": "string_replace",
      "params": { "find": "NIET STOMEN", "replace": "NIET STOMEN!" }
    }
  ]
}
